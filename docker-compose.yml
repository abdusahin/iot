version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

    networks:
      - overlay  
  kafka:
    image: wurstmeister/kafka:0.11.0.0
    ports:
      - 9092
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"      
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_PROTOCOL_NAME: INSIDE
      KAFKA_PORT: 9092
    volumes:
      - ./kafka_data:/kafka
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - overlay
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

 kafka-manager:
  image: sheepkiller/kafka-manager:latest
  ports:
    - 9000
  environment:
    ZK_HOSTS: zookeeper:2181
    APPLICATION_SECRET: hello-world
    KM_ARGS: -Djava.net.preferIPv4Stack=true
  networks:
    - overlay  
  
  mosquitto:
    image: toke/mosquitto
    volumes:
      - ./mqtt_data:/mqtt/data
      - ./mqtt_log:/mqtt/log
      - ./mqtt_config:/mqtt/config
    ports:
       - 1883
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

    networks:
      - overlay  
  
  # mosquitto-2:
  #   image: toke/mosquitto
  #   volumes:
  #     - ./mqtt-data-2:/mqtt/data
  #     - ./mqtt-log-2:/mqtt/log
  #     - ./mqtt-config-2:/mqtt/config
  #   ports:
  #      - 1883
 
  haproxy:
    image: haproxy:1.7
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
       - 1883
       # - 9001:9001
    networks:
      - overlay
   

  cassandra:
    image: webscam/cassandra:3.11
    volumes:
      - ./cassandra_data:/var/lib/cassandra
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 60s
    networks:
      - overlay
    ports:
      - 7000
      - 9042
  
  # cassandra-2:
  #   image: cassandra:3.11.0
  #   container_name: cassandra-2
  #   environment:
  #     CASSANDRA_BROADCAST_ADDRESS: "cassandra-2"
  #     CASSANDRA_SEEDS: "cassandra-1"
  #   volumes:
  #     - ./cassandra2:/var/lib/cassandra
  #   restart: always  
  #   ports:
  #     - 7000
  #     - 9042
  #   depends_on:
  #     - cassandra-1
    
  # cassandra-3:
  #   image: cassandra:3.11.0
  #   container_name: cassandra-3
  #   environment:
  #     CASSANDRA_BROADCAST_ADDRESS: "cassandra-3"
  #     CASSANDRA_SEEDS: "cassandra-1"
  #   volumes:
  #     - ./cassandra3:/var/lib/cassandra
  #   restart: always  
  #   ports:
  #     - 7000
  #     - 9042
  #   depends_on:
  #     - cassandra-1
  
  # zoo1:
  #   image: zookeeper
  #   restart: always
  #   ports:
  #     - 2181:2181
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888

  # zoo2:
  #   image: zookeeper
  #   restart: always
  #   ports:
  #     - 2182:2181
  #   environment:
  #     ZOO_MY_ID: 2
  #     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888

  # zoo3:
  #   image: zookeeper
  #   restart: always
  #   ports:
  #     - 2183:2181
  #   environment:
  #     ZOO_MY_ID: 3
  #     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888

  # kafka:
  #   image: wurstmeister/kafka
  #   volumes:
  #     - ./kafka_data:/kafka
  #   ports:
  #     - "9092"
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
  #   links:
  #     - zoo1
  #     - zoo2
  #     - zoo3 
  # tb:
  #   image: "thingsboard/application:1.3.0"
  #   ports:
  #     - "8080:8080"
  #     - "2883:2883"
  #     - "5683:5683/udp"
  #   env_file:
  #     - tb.env
  #   environment:
  #     - ADD_SCHEMA_AND_SYSTEM_DATA=true
  #     - ADD_DEMO_DATA=false
  #   volumes:
  #     - ./thingsboard_data:/usr/share/thingsboard/data/sql
  #   entrypoint: /run-application.sh
  #   links:
  #     - cassandra-1
  #     - cassandra-2
  #     - cassandra-3


networks:
  overlay:
#networks:
#  default:
#    external:
#       name: overlay-net

#volumes:
#  mqtt_data:
#  mqtt_log:
#  mqtt_config:
#    external:
#      name: vol-cassandra1
  # cassandra2:
#    external:
#      name: vol-cassandra2
  # cassandra3:
#    external:
#      name: vol-cassandra3
